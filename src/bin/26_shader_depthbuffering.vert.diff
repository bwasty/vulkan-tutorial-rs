--- a/25_shader_texturesampler.vert
+++ b/26_shader_depthbuffering.vert
@@ -8,7 +8,7 @@ layout(binding = 0) uniform UniformBufferObject {
 } ubo;
 
 // NOTE: names must match the `Vertex` struct in Rust
-layout(location = 0) in vec2 pos;
+layout(location = 0) in vec3 pos;
 layout(location = 1) in vec3 color;
 layout(location = 2) in vec2 tex;
 
@@ -20,7 +20,7 @@ out gl_PerVertex {
 };
 
 void main() {
-    gl_Position = ubo.proj * ubo.view * ubo.model * vec4(pos, 0.0, 1.0);
+    gl_Position = ubo.proj * ubo.view * ubo.model * vec4(pos, 1.0);
     fragColor = color;
     fragTexCoord = tex;
 }
\ No newline at end of file
